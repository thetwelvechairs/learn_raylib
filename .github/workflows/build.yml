name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '41 7 * * 5'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
    strategy:
      fail-fast: true
      matrix:
        language: [ 'cpp' ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11


#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v2
#        with:
#          languages: cpp

      - name: Build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential git cmake pip curl libgl-dev libglu1-mesa-dev libegl-dev
          pip install conan
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: Run build-wrapper
        run: |
          export CONAN_SYSREQUIRES_MODE=enabled
          curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -q build-wrapper-linux-x86.zip
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - Unix Makefiles" .
          build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-outputs cmake --build . --target learn_raylib --clean-first -- -j 4

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -L -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner-cli-4.7.0.2747-linux.zip
          sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner --define sonar.host.url="https://sonarcloud.io" --define sonar.cfamily.build-wrapper-output="bw-outputs" --define sonar.sources="src"
